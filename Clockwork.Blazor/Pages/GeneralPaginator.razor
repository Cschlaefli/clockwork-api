@using System.Net.Http
@inject HttpClient Http
@using Clockwork.Models
@using BlazorPagination

@if (_data == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <BlazorPager CurrentPage="@_data.CurrentPage"
            PageCount="@_data.PageCount"
            OnPageChanged="(async e => { _page = e; await GetData();})"

            ShowFirstLast="@ShowFirstLast"
            ShowPageNumbers="@ShowPageNumbers"
            VisiblePages="@VisiblePages"
            NextText="@NextText"
            PreviousText="@PreviousText"/>
}

@typeparam type 
@typeparam resultType

@code {

    [Parameter] public string slug {get;set;}

    [Parameter] public int PageCount { get; set; }

    [Parameter] public int CurrentPage { get; set; }

    [Parameter] public Func<resultType, Task> OnPageChanged { get; set; } = null;

    [Parameter] public bool ShowFirstLast { get; set; } = false;

    [Parameter] public bool ShowPageNumbers { get; set; } = true;

    [Parameter] public string FirstText { get; set; } = "First";

    [Parameter] public string LastText { get; set; } = "Last";

    [Parameter] public string PreviousText { get; set; } = "Previous";

    [Parameter] public string NextText { get; set; } = "Next";

    [Parameter] public int VisiblePages { get; set; } = 5;


    private PagedResultGeneric<type> _data;
    protected override async Task OnInitializedAsync(){

        await GetData();
    } 

    private int _page = 1;
    private int _page_size = 30;
    private int _page_count = 0;
    private int _records = 0;
    private async Task GetData()
    {
        _records = await Http.GetFromJsonAsync<int>($"{slug}/count");
        _page_count = (_records + _page_size -1)/_page_size;

        _data = new PagedResultGeneric<type>() { 
            CurrentPage = _page,
            PageSize = _page_size,
            PageCount = _page_count
            };
        _data.Results = await Http.GetFromJsonAsync<type[]>($"{slug}/{_page}/{_page_size}");
        _data.RowCount = _data.Results.Count();

        StateHasChanged();
    }

}